-- 형식 지정자
-- YYYY부터 MI, SS 등까지 여러가지의
-- 미리 지정된 문자를 입력하면
-- 해당되는 날짜, 시간 값이 해당 위치에
-- 대입된다.

-- 형식지정자는 TO_CHAR() 함수에서 사용된다.
-- TO_CHAR(날짜값, '형식지정자로 작성된 문자열')
-- 해당 날짜값이 형식 지정자에 맞게 포매팅되어
-- 새로운 문자열로 변환된다.
SELECT
	TO_CHAR(
		SYSDATE, -- 현재 시스템 시간을 실시간으로
		-- 받아오는 객체
		'YY/MM/DD' -- 형식 지정자 문자열을 작성하여 
		-- 해당 형식에 맞게 날짜 값을 문자열로 변환한다.
	) AS 오늘날짜
FROM DUAL;

SELECT SYSDATE
FROM DUAL;

-- 형식 지정자: 숫자에의 적용
-- 일상생활이나 실무에서 숫자값을 표현할 때 천 단위로 반점을 찍어
-- 단위를 읽기 쉽게 한다.
-- 이러한 규칙을 형식 지정자를 통해서도 표현할 수 있다.
-- 예) 84900 -> 84,900$
SELECT 
	TO_CHAR(84900, '$999,999') 
FROM DUAL;
-- 숫자를 문자열로 바꾸면서 단위를 나타내는 여러 기호를 추가할 수 있다.
SELECT 
	TO_CHAR(3.141592, '999.999')
	-- 소숫점이 있는 실수값을 문자열로 바꿀 때
	-- 소숫점 아래 9의 개수가 소숫점 아래 자릿수를 나타낸다.
	-- 이때 자릿수가 9.999라면 4번째 자릿수에서 반올림한다.
FROM DUAL;

-- TO_NUMBER()
SELECT
	TO_NUMBER('1,234.56', '9,999.99') AS "숫자로의_변환",
	TO_NUMBER('$3124.13', '$9999.99') AS "통화_TO_숫자"
	-- 숫자로 변경했을 때 자릿수를 나타내는 반점,이 나오는 것은
	-- 문자열의 반점과는 다른 의미이다.(실제 반점이 아님)
FROM DUAL;

-- 문자열을 날짜 형식으로 변환
-- TO_DATE(날짜를 나타내는 문자열, '형식 지정자로 이루어진 문자열')
SELECT 
	-- 2025-04-22 -> 날짜값으로 변환
	-- 실제 DATE타입은 시간값까지 포함하지만 형변환할 때
	-- 명시적으로 입력하지 않으면 기본값으로 세팅된다.
	TO_DATE('25-04-22', 'YY-MM-DD') 날짜로의변환,
	TO_DATE('04/22/25', 'MM/DD/YY') "순서를 바꿔도 된다"
FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'MON') 이번달
FROM DUAL;

-- 세션 날짜 언어 설정 변경
ALTER SESSION
SET NLS_DATE_LANGUAGE = 
--'ENGLISH';
--'JAPANESE';
--'CHINESE'; -- 파일이 없어서 안 될 수 있음
'KOREAN';
-- 이러한 언어 설정은 로컬 환경(PC)에서만 동작하며,
-- 온라인 편집기를 사용하는 경우, 동작하지 않을 수 있다.

-- CAST 함수
-- 이 함수는 SQL표준을 따르는 함수로, 서로 다른 데이터베이스 간의
-- 호환성을 위해서 자주 사용된다.
SELECT 
	CAST('34' AS NUMBER) "숫자로의 변환",
	CAST(SYSDATE AS VARCHAR2(20)) "문자열로의 변환",
	CAST('2025-04-22' AS DATE) "날짜로의 변환"
FROM DUAL;


-- 두 날짜 사이의 정확한 개월 수 차이를 계산하는 함수
-- MONTHS_BETWEEN()
SELECT 
	ROUND( -- 실수를 정수로 반올림하는 함수
		MONTHS_BETWEEN( -- 두 날짜 사이의 개월 수를 실수로 반환하는 함수
			SYSDATE, -- DB의 시스템 시간을 정확하게 반환하는 함수
			TO_DATE('2024-01-01', 'YYYY-MM-DD') -- 문자열 날짜를
			-- 날짜 타입으로 변경하는 함수
		), 1 -- ROUND 함수에서 소숫점 아래 표현하고 싶은 자릿수를 적는 부분
	)
	"개월 차이" -- 15.70434998506571087216248506571087216249
FROM DUAL;