-- 데이터베이스의 설계
-- 설계는 3단계로 이루어진다.
-- 1. 개념적, 2. 논리적, 3. 물리적

-- 관계형 데이터베이스 시스템인 orcale에서는 테이블 간의 관계를 구성하기 위해
-- PK와 FK라는 개념을 사용한다.
-- PK(Primary key) 기본키
-- PK란 각 테이블의 각 행(레코드)을 고유하게 가리키기 위해 컬럼에 부여하는 역할이다.
-- PK의 특징은 중복 불가(UNIQUE), NULL 불가 등이 있다.
 
-- FK(Foreign key) 외래키
-- 다른 테이블과 관계를 맺기 위해 사용하는 역할 중 하나로
-- 다른 테이블의 PK를 참조하는 컬럼을 정한다.
-- -> 다른 테이블의 기본키를 참조한다.

-- 온라인 쇼핑몰 시스템으로 개념적 설계
-- 1. 고객 테이블 - 고객 정보
-- 2. 주문 테이블 - 주문번호 ~ 주문한 고객을 가리킬 값

-- 고객 테이블
-- 고객ID	고객성명	주소

-- 주문 테이블
-- 주문ID	주문고객	주문물품		주문수량

-- 2. 논리적 설계
-- 개념적으로 각 테이블에 들어갈 컬럼을 정했다면 
-- PK, FK 등을 설정하여 관계를 정의해 주어야 한다.
-- 개념적 설계에서 도출된 구조를 테이블 스키마(구조)로 변환하는 과정이다.
-- 이 단계에서는 정규화(Nomalization)를 통해 데이터의 무결성을
-- 유지하고 중복을 최소화 하는 것이 중요하다.

-- 고객 테이블
-- 고객ID	고객성명	주소
-- PK		

-- 주문 테이블
-- 주문ID	주문고객	주문물품	주문수량
-- PK		FK		
-- 			고객ID

-- 정규화(Nomalization)
-- 정규화는 데이터베이스 설계의 핵심 단계로,
-- 데이터 구조를 최적화하여 '이상 현상(anomaly)'을 방지하는 것을
-- 목표로 한다.
-- 이상현상의 종류
-- 1. 삽입 이상, 2. 수정 이상, 3. 삭제 이상
-- 삽입 이상
-- 새로운 데이터를 삽입할 때, 원하지 않는 정보까지 함께 추가해야 하는 문제
-- 예시) 학생-과목 테이블에서 새로운 과목을 추가해야 할 때,
-- 수강하는 학생이 없으면 과목 정보를 입력할 수 없음.
-- -> 과목 테이블을 따로 만든다

-- 수정 이상
-- 데이터 수정 시 일관성을 위해 여러 관련있는 데이터들을 동시에(함께)
-- 수정해야 하는 문제
-- 예시) 직원-부서 테이블에서 부서 변경을 할 때, 관련 있는 부서 정보까지 
-- 모두 일관되게 수정해야 함.

-- 삭제 이상
-- 데이터 삭제 시 원치 않는 다른 정보까지 같이 삭제되는 문제
-- 예시) 과목-교수 테이블에서 과목 삭제 시,
-- 해당 과목의 교수 정보까지 같이 삭제되는 문제

-- 정규화를 통해 이러한 이상현상을 방지하고 데이터 중복 최소화, 일관성 유지를
-- 목표로 한다.

-- 정규화의 단계 -> 4/24(목)
-- 제1정규형~제3정규형 + BCNF 정규형